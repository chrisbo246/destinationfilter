{"version":3,"sources":["../../../app/scripts/helpers/jquery.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAiBA,IAAI,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,EAAE;AAChD,gBAAY,CAAC;AACb,UAAM,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;AACnC,oBAAY,CAAC;AACb,eAAO,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,EAAE;AAAC,mBAAO,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;SAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;KACtG,CAAC;CACL;;;;;;AAQD,KAAK,CAAC,GAAG,GAAG,UAAU,KAAK,EAAE;AACzB,gBAAY,CAAC;AACb,WAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;CACtC,CAAC;;;;;;AAQF,KAAK,CAAC,GAAG,GAAG,UAAU,KAAK,EAAE;AACzB,gBAAY,CAAC;AACb,WAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;CACtC,CAAC;;;;;;;;;;;;;;;;;AAqBF,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAa,GAAG,EAAE;AAC1B,gBAAY,CAAC;AACb,WAAO,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;CAClC,CAAA;;;;;;AAQD,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAa,GAAG,EAAE;AAC1B,gBAAY,CAAC;AACb,WAAO,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAA,AAAC,CAAC;CACpC,CAAA;;;;;;AAQD,IAAI,GAAG,GAAG,SAAN,GAAG,CAAa,CAAC,EAAE;AACnB,gBAAY,CAAC;AACb,WAAO,CAAC,AAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA,AAAC,GAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,IAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA,AAAC,CAAC;CAChE,CAAA;;;;;;;;AAUA,SAAS,YAAY,CAAC,OAAO,EAAE;AAC5B,QAAI,MAAM,GAAG,EAAE,CAAC;AAChB,SAAK,IAAI,GAAG,IAAI,OAAO,EAAE;AACrB,YAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AACzB,kBAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7B;KACJ;AACD,WAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC3B;;;;;;;;AAUD,IAAI,WAAW,GAAG,SAAd,WAAW,CAAa,KAAK,EAAE,QAAQ,EAAE;AAC1C,QAAG,KAAK,IAAI,CAAC,EAAE,OAAO,QAAQ,CAAC;AAC/B,QAAI,CAAC,GAAG,IAAI,CAAC;AACb,QAAI,EAAE,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;AAC3B,QAAI,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACtE,QAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,WAAO,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,CAAE,WAAW,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;CACnE,CAAC","file":"jquery.js","sourcesContent":["/*old-jslint indent: 2, unparam: true, plusplus: true */\n/*\njslint\n    devel: true,\n    browser: true,\n    node: false\n*/\n/*\nglobal\n\n*/\n\n\n/**\n * Convert hyphen string to camelcase\n */\n\nif (typeof String.prototype.toCamel !== 'function') {\n    'use strict';\n    String.prototype.toCamel = function () {\n        'use strict';\n        return this.replace(/[-_]([a-z])/g, function (g) {return g[1].toUpperCase();}).replace(/[\\W]/g, '')\n    };\n}\n\n\n\n/**\n * Function to get the Maximum value in Array\n */\n\nArray.max = function (array) {\n    'use strict';\n    return Math.max.apply(Math, array);\n};\n\n\n\n/**\n * Function to get the Minimum value in Array\n */\n\nArray.min = function (array) {\n    'use strict';\n    return Math.min.apply(Math, array);\n};\n\n\n\n/**\n * Array intersection\n */\n\n/*$.intersect = function (a, b) {\n    'use strict';\n    return $.grep(a, function (i) {\n        return $.inArray(i, b) > -1;\n    });\n};*/\n\n\n\n/**\n * Convert degrees to radians\n */\n\nvar degToRad = function (deg) {\n    'use strict';\n    return deg * Math.PI * 2 / 360;\n}\n\n\n\n/**\n * Convert radians to degrees\n */\n\nvar radToDeg = function (rad) {\n    'use strict';\n    return rad * 360 / (Math.PI * 2);\n}\n\n\n\n/**\n * Modulo for negative values\n */\n\nvar mod = function (n) {\n    'use strict';\n    return ((n % (2 * Math.PI)) + (2 * Math.PI)) % (2 * Math.PI);\n}\n\n\n\n/**\n * Return all events binded on an element\n * The result \n * @return string Events list separated with a space, can be used with $(element).on(result, ...\n */\n // jQuery._data(jQuery('.chosen-select')[0], 'events')\n function getAllEvents(element) {\n    var result = [];\n    for (var key in element) {\n        if (key.indexOf('on') === 0) {\n            result.push(key.slice(2));\n        }\n    }\n    return result.join(' ');\n}\n\n\n\n/**\n * Convert bytes to string size\n * @param {integer} bytes - Size in bytes\n * @param {integer} decimals - Round number to n decimals\n * @returns {string} The formatted value\n */\nvar formatBytes = function (bytes, decimals) {\n   if(bytes == 0) return '0 Byte';\n   var k = 1000;\n   var dm = decimals + 1 || 3;\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n   var i = Math.floor(Math.log(bytes) / Math.log(k));\n   return (bytes / Math.pow(k, i)).toPrecision(dm) + ' ' + sizes[i];\n};"]}